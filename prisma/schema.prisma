// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum USER_STATUS {
  ACTIVE // 活跃状态
  SUSPENDED // 停用状态
  LOCKED // 锁定状态
  INACTIVE // 注销（删除）状态
}

// 用户信息表
model User {
  id        String      @id @unique @default(cuid())
  name      String?
  username  String      @unique
  email     String?     @unique
  mobile    String?     @unique
  password  String
  avatar    String?     @db.Text
  status    USER_STATUS @default(ACTIVE)
  setting   Setting?
  createdAt DateTime    @default(dbgenerated("NOW()")) @db.DateTime
  updatedAt DateTime    @default(dbgenerated("NOW() ON UPDATE NOW()")) @db.Timestamp(0)
  roles     UserRole[]
}

// 角色表
model Role {
  id          String           @id @unique @default(cuid())
  name        String           @unique
  description String?
  users       UserRole[]
  permissions RolePermission[]
}

model UserRole {
  userId String
  roleId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  role   Role   @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@id([userId, roleId])
}

// 权限表
model Permission {
  id          String           @id @unique @default(cuid())
  name        String
  description String?
  roles       RolePermission[]
}

model RolePermission {
  roleId       String
  permissionId String
  role         Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  @@id([roleId, permissionId])
}

// 用户设置表
model Setting {
  language   String  @default("zh-cn")
  background String? @db.Text
  user       User    @relation(fields: [userId], references: [id])
  userId     String  @unique
}

//////////////////////////////////////////////////
// 全局设置表
//////////////////////////////////////////////////
model Option {
  name     String  @unique
  value    String? @db.Text
  autoload Boolean @default(false)
}
